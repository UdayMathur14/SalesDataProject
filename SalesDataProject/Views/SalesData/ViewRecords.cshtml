@model SalesDataProject.Models.UploadResultViewModel
@{
    ViewData["Title"] = "View Records";
}

<div class="container mt-4">
    <div class="header d-flex justify-content-between align-items-center mb-3" style="border:1px dotted green;">
        <h4 class="mb-3 " style="color:green"><i>Validate Lead Data</i></h4>
        <div class="buttons d-flex gap-3">
            <form asp-action="UploadSalesData" method="post" enctype="multipart/form-data" id="uploadForm">
                <input type="hidden" id="categorySelectHidden" name="selectedCategory" value="" /> <!-- Hidden input for category -->
                <input type="file" id="fileUpload" name="file" class="form-control-file" required style="display: none;" />
                <button type="button" id="uploadButton" class="btn btn-primary">Upload Excel</button>
            </form>
            @* <form asp-action="DownloadTemplate" method="get">
                <button type="submit" class="btn btn-outline-success">Download Template</button>
            </form> *@
            <form>
                <button type="submit" class="btn btn-success" id="downloadBtn">Download Template</button>
            </form>
            <a href="@Url.Action("Index", "Home")" class="btn btn-danger" style="background-color:red; width:auto">
                Back
            </a>
        </div>
    </div>

    <div class="header card shadow-sm p-4 mb-5" style="border:1px dotted black;)">
        <h4 class="mb-3" style="color:darkblue"><i>View Lead Data</i></h4>
        <form asp-action="ViewRecord" method="post">
            <div class="row g-3">
                <div class="col-md-3">
                    <div class="form-group">
                        <label for="SelectedDate" class="form-label">Select Date:</label>
                        <input asp-for="SelectedDate" class="form-select form-control-sm" type="date" placeholder="Choose a date" onfocus="this.showPicker()" />
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label for="RecordType" class="form-label">Select Record Type:</label>
                        <select asp-for="RecordType" class="form-select form-control-sm">
                            <option value="">--Select Type--</option>
                            <option value="Blocked">Blocked</option>
                            <option value="Clean">Clean</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label for="Category" class="form-label">Select Category:</label>
                        <select asp-for="Category" class="form-select form-control-sm">
                            <option value="">--Select Category--</option>
                            <option value="UNIVERSITY">University</option>
                            <option value="SME">SME</option>
                            <option value="CORPORATE">Corporate</option>
                            <option value="LAWFIRM">Law Firm</option>
                            <option value="PCT">PCT</option>
                            <option value="INDIVIDUAL">Individual</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label for="Event" class="form-label">Select Event</label>
                        <select asp-for="Event" asp-items="ViewBag.EventNames" class="form-select form-control-sm">
                            <option value="">-- Select Event --</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-2 d-flex align-items-end">
                    <button type="submit" class="btn btn-primary w-100">
                        <i class="bi bi-filter"></i> Search
                    </button>
                </div>
            </div>
        </form>
    </div>

    <div class="card shadow-sm p-4" style="border:1px dotted white">
        @if (Model.BlockedCustomers != null && Model.BlockedCustomers.Any())
        {
            <h4 class="mb-3 text-danger">Blocked Customers</h4>
            <div style="max-height: 600px; overflow-y: auto; border: 1px solid #ddd; border-radius: 5px;">
                <table class="table table-striped table-hover table-header">
                    <thead class="table-danger ">
                        <tr>
                            <th>Category</th>
                            <th>Company Name</th>
                            <th>Email</th>
                            <th>Contact Number</th>
                            <th>Blocked Date</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var customer in Model.BlockedCustomers)
                        {
                            <tr>
                                <td>@customer.CATEGORY</td>
                                <td>@customer.COMPANY_NAME</td>
                                <td>@customer.CUSTOMER_EMAIL</td>
                                <td>@customer.CUSTOMER_CONTACT_NUMBER1</td>
                                <td>@(customer.CREATED_ON != null ? customer.CREATED_ON.Value.ToString("yyyy-MM-dd") : "")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        @if (Model.CleanCustomers != null && Model.CleanCustomers.Any())
        {
            <h4 class="mb-3 text-success">Clean Customers</h4>
            <div style="max-height: 600px; overflow-y: auto; border: 1px solid #ddd; border-radius: 5px;">
                <table class="table table-striped table-hover table-header">
                    <thead class="table-success">
                        <tr>
                            <th>Category</th>
                            <th>Company Name</th>
                            <th>Email</th>
                            <th>Contact Number</th>
                            <th>Created Date</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var customer in Model.CleanCustomers)
                        {
                            <tr>
                                <td>@customer.CATEGORY</td>
                                <td>@customer.COMPANY_NAME</td>
                                <td>@customer.CUSTOMER_EMAIL</td>
                                <td>@customer.CUSTOMER_CONTACT_NUMBER1</td>
                                <td>@(customer.CREATED_ON != null ? customer.CREATED_ON.Value.ToString("yyyy-MM-dd") : "")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
    <div class="header align-items-center mb-3 mt-lg-5" style="border:1px dotted red">
        <h4 class="mb-4" style="color:black"><i>Upload Event Contacts</i></h4>

        <form asp-action="UploadSalesDataEvent" method="post" enctype="multipart/form-data" class="header d-flex justify-content-between align-items-center mb-3 gap-3">
            <div class="col-md-3">
                <label for="eventName" class="form-label">Event Name</label>
                <input type="text" class="form-control" id="eventName" name="EventName" required>
            </div>

            <div class="col-md-3">
                <label for="eventDate" class="form-label">Event Date</label>
                <input type="date" class="form-control" id="eventDate" name="EventDate" required>
            </div>

            <div class="col-md-3">
                <label for="excelFile" class="form-label">Upload Excel File</label>
                <input type="file" class="form-control" id="excelFile" name="file" accept=".xlsx" required>
            </div>

            <div class="col-md-3">
                <button type="submit" class="btn btn-primary mt-4">Upload</button>
                @* <a asp-action="DownloadTemplate1" class="btn btn-success mt-4">Template</a> *@
                <form>
                    <button type="submit" class="btn btn-success mt-4" id="downloadBtn1">Template</button>
                </form>
            </div>
        </form>
    </div>
</div>


<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/js/bootstrap.bundle.min.js"></script>
<script>
        // Optionally, hide buttons if no checkboxes are selected
        $("input[type='checkbox']").change(function () {
            var anyChecked = $("input[type='checkbox']:checked").length > 0;
            $(".btn-danger, .btn-success").prop("disabled", !anyChecked);
        });
    });
</script>


<script>
    document.addEventListener('DOMContentLoaded', function () {
        const uploadButton = document.getElementById('uploadButton');
        const fileUpload = document.getElementById('fileUpload');
        const uploadForm = document.getElementById('uploadForm');

        if (uploadButton && fileUpload && uploadForm) {

            uploadButton.addEventListener('click', function () {
                fileUpload.click();
            });

            fileUpload.addEventListener('change', function () {
                if (fileUpload.files.length > 0) {
                    showSpinner(); // Show loader
                    uploadForm.submit();
                }
            });
        }
    });

    function showSpinner() {
        document.getElementById("spinner-overlay").style.display = "flex";
    }

    function hideSpinner() {
        document.getElementById("spinner-overlay").style.display = "none";
    }

    // Hide the loader when the page is fully loaded (after form submission)
    window.addEventListener('load', function () {
        hideSpinner();
    });
</script>



<style>
    body {
        background-color: #f8f9fa;
    }

    .header {
        background-color: #ffffff;
        padding: 15px;
        border-radius: 5px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    .card {
        border: none;
        border-radius: 8px;
        background: #ffffff;
    }

    .table {
        border-radius: 8px;
        overflow: hidden;
    }

        .table thead th {
            background-color: #e9ecef;
            color: #495057;
        }

    .btn {
        border-radius: 25px;
    }

    .form-control-sm {
        border-radius: 5px;
    }

    .buttons .btn {
        min-width: 150px;
    }

    h4 {
        font-weight: bold;
    }
</style>
<style>
    .error-message.collor {
        background-color: greenyellow;
    }

    #categorySelectDropdown {
        border: 2px solid green;
    }
</style>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Attach click event after DOM is loaded
        const downloadBtn = document.getElementById("downloadBtn");
        if (!downloadBtn) {
            console.error("Please try again!");
            return;
        }

        downloadBtn.addEventListener("click", function (event) {
            event.preventDefault(); // Prevent form submission

            const spinner = document.getElementById("spinner-overlay");
            if (!spinner) {
                console.error("Spinner overlay element not found!");
                return;
            }

            // Show loader
            spinner.style.display = "flex";

            fetch('/SalesData/DownloadTemplate', { method: 'GET', cache: 'no-store' })
                .then(response => {
                    if (!response.ok) {
                        throw new Error("Server responded with " + response.status);
                    }
                    return response.blob();
                })
                .then(blob => {
                    // Hide loader
                    spinner.style.display = "none";

                    // Create a temporary link element to trigger download
                    const link = document.createElement("a");
                    link.href = window.URL.createObjectURL(blob);
                    link.download = "MailingTemplate.xlsx";
                    document.body.appendChild(link);
                    link.click();
                    document.body.removeChild(link);
                })
                .catch(error => {
                    // Hide loader
                    spinner.style.display = "none";
                    console.error("Download failed:", error);
                    alert("Server is not responding. Please try again.");
                });
        });
    });
</script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Get the button element
        const downloadBtn1 = document.getElementById("downloadBtn1");
        if (!downloadBtn1) {
            console.error("Download button not found in the DOM.");
            return;
        }

        downloadBtn1.addEventListener("click", function (event) {
            event.preventDefault(); // Prevent form submission if button is inside a form

            // Get the spinner element
            const spinner = document.getElementById("spinner-overlay");
            if (!spinner) {
                console.error("Spinner overlay element not found!");
                return;
            }

            // Show loader
            spinner.style.display = "flex";

            // Fetch the file from the server
            fetch('/SalesData/DownloadTemplate1', { method: 'GET', cache: 'no-store' })
                .then(response => {
                    if (!response.ok) {
                        throw new Error("Server responded with " + response.status);
                    }
                    return response.blob(); // Convert response to Blob
                })
                .then(blob => {
                    // Hide loader
                    spinner.style.display = "none";

                    // Create a temporary link element to trigger download
                    const link = document.createElement("a");
                    link.href = window.URL.createObjectURL(blob);
                    link.download = "EventTemplate.xlsx"; // Set the file name
                    document.body.appendChild(link);
                    link.click(); // Trigger the download
                    document.body.removeChild(link); // Clean up the temporary link
                })
                .catch(error => {
                    // Hide loader
                    spinner.style.display = "none";
                    console.error("Download failed:", error);
                    alert("Server is not responding. Please try again.");
                });
        });
    });
</script>

