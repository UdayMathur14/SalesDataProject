@model SalesDataProject.Models.UploadResultViewModel
@{
    ViewData["Title"] = "View Records";
}

<div class="container mt-4">
    <div class="header d-flex justify-content-between align-items-center mb-3 text-white rounded-2 p-3" style="background-color:cadetblue">
        <h4 class="mb-0"><i class="bi bi-clipboard-check me-2"></i> Lead Data Management</h4>
        <div class="buttons d-flex gap-2">
            <form asp-action="UploadSalesData" method="post" enctype="multipart/form-data" id="uploadForm">
                <input type="hidden" id="categorySelectHidden" name="selectedCategory" value="" />
                <input type="file" id="fileUpload" name="file" class="form-control-file d-none" required />
                <button type="button" id="uploadButton" class="btn btn-outline-light btn-sm"><i class="bi bi-upload me-1"></i> Upload</button>
            </form>
            <button type="button" class="btn btn-outline-light btn-sm shadow-sm" id="downloadBtn">
                <i class="bi bi-download me-1"></i> Template
            </button>
            <a href="@Url.Action("Index", "Home")" class="btn btn-outline-light btn-sm shadow-sm"><i class="bi bi-arrow-left me-1"></i> Back</a>
        </div>
    </div>

    <div class="card shadow-lg p-4 mb-5 border-left-info border-3" style="background-color:lightcyan">
        <h5 class="mb-3 fw-semibold"><i class="bi bi-search me-2"></i> Filter Lead Data</h5>
        <form asp-action="ViewRecord" method="post">
            <div class="row g-3 align-items-center">
                <div class="col-md-3">
                    <label for="SelectedDate" class="form-label text-secondary small"><i class="bi bi-calendar-date me-1"></i> Date:</label>
                    <input asp-for="SelectedDate" class="form-select form-control-sm shadow-sm" type="date" placeholder="Choose date" onfocus="this.showPicker()" />
                </div>
                <div class="col-md-3">
                    <label for="RecordType" class="form-label text-secondary small"><i class="bi bi-list-ul me-1"></i> Type:</label>
                    <select asp-for="RecordType" class="form-select form-control-sm shadow-sm">
                        <option value="">-- Select --</option>
                        <option value="Blocked">Blocked</option>
                        <option value="Clean">Clean</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label for="Category" class="form-label text-secondary small"><i class="bi bi-bookmark me-1"></i> Category:</label>
                    <select asp-for="Category" class="form-select form-control-sm shadow-sm">
                        <option value="">-- Select --</option>
                        <option value="UNIVERSITY">University</option>
                        <option value="MSME">MSME</option>
                        <option value="CORPORATE">Corporate</option>
                        <option value="LAWFIRM">Law Firm</option>
                        <option value="PCT">PCT</option>
                        <option value="INDIVIDUAL">Individual</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label for="Event" class="form-label text-secondary small"><i class="bi bi-calendar-event me-1"></i> Event:</label>
                    <select asp-for="Event" asp-items="ViewBag.EventNames" class="form-select form-control-sm shadow-sm">
                        <option value="">-- Select --</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <button type="submit" class="btn btn-primary w-100 shadow-sm"><i class="bi bi-filter me-1"></i> Search</button>
                </div>
            </div>
        </form>
    </div>

    <div class="row">
        <div class="mb-2">
            @if (Model.BlockedCustomers != null && Model.BlockedCustomers.Any())
            {
                <div class="card shadow-sm border-left-danger border-3">
                    <div class="card-body">
                        <h6 class="card-title text-danger fw-semibold"><i class="bi bi-x-octagon me-2"></i> Blocked Leads</h6>
                        <div class="table-responsive rounded">
                            <table class="table table-striped table-hover bg-white mb-0">
                                <thead class="table-danger text-white small">
                                    <tr>
                                        <th>Category</th>
                                        <th>Company Name</th>
                                        <th>Email</th>
                                        <th>Contact Number</th>
                                        <th>Blocked On</th>
                                    </tr>
                                </thead>
                                <tbody class="small">
                                    @foreach (var customer in Model.BlockedCustomers)
                                    {
                                        <tr>
                                            <td>@customer?.CATEGORY</td>
                                            <td>@customer?.COMPANY_NAME</td>
                                            <td>@customer?.CUSTOMER_EMAIL</td>
                                            <td>@customer?.CUSTOMER_CONTACT_NUMBER1</td>
                                            <td>@(customer?.CREATED_ON != null ? customer?.CREATED_ON.Value.ToString("yyyy-MM-dd") : "")</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            }
            else if (Model.BlockedCustomers != null)
            {
                <div class="alert alert-light shadow-sm border-left-danger border-3" role="alert">
                    <i class="bi bi-x-octagon me-2"></i> No blocked leads found.
                </div>
            }
        </div>

        <div class="mt-2 mb-4">
            @if (Model.CleanCustomers != null && Model.CleanCustomers.Any())
            {
                <div class="card shadow-sm border-left-success border-3">
                    <div class="card-body">
                        <h6 class="card-title text-success fw-semibold"><i class="bi bi-check-circle me-2"></i> Clean Leads</h6>
                        <div class="table-responsive rounded">
                            <table class="table table-striped table-hover bg-white mb-0">
                                <thead class="table-success text-white small">
                                    <tr>
                                        <th>Category</th>
                                        <th>Company Name</th>
                                        <th>Email</th>
                                        <th>Contact Number</th>
                                        <th>Created On</th>
                                    </tr>
                                </thead>
                                <tbody class="small">
                                    @foreach (var customer in Model.CleanCustomers)
                                    {
                                        <tr>
                                            <td>@customer?.CATEGORY</td>
                                            <td>@customer?.COMPANY_NAME</td>
                                            <td>@customer?.CUSTOMER_EMAIL</td>
                                            <td>@customer?.CUSTOMER_CONTACT_NUMBER1</td>
                                            <td>@(customer?.CREATED_ON != null ? customer?.CREATED_ON.Value.ToString("yyyy-MM-dd") : "")</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            }
            else if (Model.CleanCustomers != null)
            {
                <div class="alert alert-light shadow-sm border-left-success border-3" role="alert">
                    <i class="bi bi-check-circle me-2"></i> No clean leads found.
                </div>
            }
        </div>
    </div>

    <div class="card shadow-lg p-4 mb-4 border-left-warning border-3" style="background-color:lightgoldenrodyellow">
        <h5 class="mb-3 fw-semibold"><i class="bi bi-upload me-2"></i> Upload Event Contacts</h5>
        <form asp-action="UploadSalesDataEvent" method="post" enctype="multipart/form-data" class="row g-3 align-items-end">
            <div class="col-md-3">
                <label for="eventName" class="form-label text-secondary small"><i class="bi bi-tag me-1"></i> Event Name:</label>
                <input type="text" class="form-control shadow-sm form-control-sm" id="eventName" name="EventName" required>
            </div>
            <div class="col-md-3">
                <label for="eventDate" class="form-label text-secondary small"><i class="bi bi-calendar me-1"></i> Event Date:</label>
                <input type="date" class="form-control shadow-sm form-control-sm" id="eventDate" name="EventDate" required>
            </div>
            <div class="col-md-3">
                <label for="excelFile" class="form-label text-secondary small"><i class="bi bi-file-earmark-spreadsheet me-1"></i> Excel File:</label>
                <input type="file" class="form-control shadow-sm form-control-sm" id="excelFile" name="file" accept=".xlsx" required>
            </div>
            <div class="col-md-3">
                <button type="submit" class="btn btn-warning shadow-sm btn-sm">
                    <i class="bi bi-cloud-upload me-1"></i> Upload
                </button>
                <button id="downloadBtn1" type="submit" class="btn shadow-sm btn-warning btn-sm">
                        <i class="bi bi-file-earmark-arrow-down me-1"></i> Template
                </button>
            </div>
        </form>
    </div>
</div>



<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/js/bootstrap.bundle.min.js"></script>
<script>
        // Optionally, hide buttons if no checkboxes are selected
        $("input[type='checkbox']").change(function () {
            var anyChecked = $("input[type='checkbox']:checked").length > 0;
            $(".btn-danger, .btn-success").prop("disabled", !anyChecked);
        });
    });
</script>


<script>
    document.addEventListener('DOMContentLoaded', function () {
        const uploadButton = document.getElementById('uploadButton');
        const fileUpload = document.getElementById('fileUpload');
        const uploadForm = document.getElementById('uploadForm');

        if (uploadButton && fileUpload && uploadForm) {

            uploadButton.addEventListener('click', function () {
                fileUpload.click();
            });

            fileUpload.addEventListener('change', function () {
                if (fileUpload.files.length > 0) {
                    showSpinner(); // Show loader
                    uploadForm.submit();
                }
            });
        }
    });

    function showSpinner() {
        document.getElementById("spinner-overlay").style.display = "flex";
    }

    function hideSpinner() {
        document.getElementById("spinner-overlay").style.display = "none";
    }

    // Hide the loader when the page is fully loaded (after form submission)
    window.addEventListener('load', function () {
        hideSpinner();
    });
    
    const fileUpload = document.getElementById('fileUpload');
        if (fileUpload) {
            fileUpload.value = '';
        }
</script>


<style>
    body {
        background-color: lightblue; /* Light gray background for a professional feel */
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; /* Professional font */
    }

    .header {
        box-shadow: 0 0.15rem 0.25rem rgba(0, 0, 0, 0.075) !important; /* Subtle shadow */
    }

    .card {
        border: none;
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.05) !important; /* More pronounced card shadow */
        border-radius: 0.4rem;
    }

    .card-title {
        font-size: 1rem; /* Slightly smaller, more professional title */
    }

    .form-label {
        font-size: 0.875rem; /* Slightly smaller, less intrusive labels */
        font-weight: 500;
    }

    .form-control-sm {
        font-size: 0.875rem;
        border-radius: 0.3rem;
    }

    .btn-sm {
        font-size: 1rem;
        border-radius: 0.8rem;
    }

    .table-responsive {
        border: 1px solid #e3e6f0; /* Light border for tables */
        border-radius: 0.4rem;
    }

    .table thead th {
        font-size: 0.875rem;
        font-weight: 600;
        color: #4e4e4e; /* Darker text for table headers */
        border-bottom: 2px solid #d1d3e2; /* More prominent header bottom border */
        padding: 0.75rem;
    }

    .table tbody td {
        font-size: 0.875rem;
        color: #666;
        padding: 0.75rem;
    }

    .alert {
        border-radius: 0.3rem;
        margin-bottom: 0; /* Remove default bottom margin in the grid layout */
    }

    .small {
        font-size: 1rem !important; /* Use Bootstrap's small class for extra emphasis */
    }
</style>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Attach click event after DOM is loaded
        const downloadBtn = document.getElementById("downloadBtn");
        if (!downloadBtn) {
            console.error("Please try again!");
            return;
        }

        downloadBtn.addEventListener("click", function (event) {
            event.preventDefault(); // Prevent form submission

            const spinner = document.getElementById("spinner-overlay");
            if (!spinner) {
                console.error("Spinner overlay element not found!");
                return;
            }

            // Show loader
            spinner.style.display = "flex";

            fetch('/SalesData/DownloadTemplate', { method: 'GET', cache: 'no-store' })
                .then(response => {
                    if (!response.ok) {
                        throw new Error("Server responded with " + response.status);
                    }
                    return response.blob();
                })
                .then(blob => {
                    // Hide loader
                    spinner.style.display = "none";

                    // Create a temporary link element to trigger download
                    const link = document.createElement("a");
                    link.href = window.URL.createObjectURL(blob);
                    link.download = "MailingTemplate.xlsx";
                    document.body.appendChild(link);
                    link.click();
                    document.body.removeChild(link);
                })
                .catch(error => {
                    // Hide loader
                    spinner.style.display = "none";
                    console.error("Download failed:", error);
                    alert("Server is not responding. Please try again.");
                });
        });
    });
</script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Get the button element
        const downloadBtn1 = document.getElementById("downloadBtn1");
        if (!downloadBtn1) {
            console.error("Download button not found in the DOM.");
            return;
        }

        downloadBtn1.addEventListener("click", function (event) {
            event.preventDefault(); // Prevent form submission if button is inside a form

            // Get the spinner element
            const spinner = document.getElementById("spinner-overlay");
            if (!spinner) {
                console.error("Spinner overlay element not found!");
                return;
            }

            // Show loader
            spinner.style.display = "flex";

            // Fetch the file from the server
            fetch('/SalesData/DownloadTemplate1', { method: 'GET', cache: 'no-store' })
                .then(response => {
                    if (!response.ok) {
                        throw new Error("Server responded with " + response.status);
                    }
                    return response.blob(); // Convert response to Blob
                })
                .then(blob => {
                    // Hide loader
                    spinner.style.display = "none";

                    // Create a temporary link element to trigger download
                    const link = document.createElement("a");
                    link.href = window.URL.createObjectURL(blob);
                    link.download = "EventTemplate.xlsx"; // Set the file name
                    document.body.appendChild(link);
                    link.click(); // Trigger the download
                    document.body.removeChild(link); // Clean up the temporary link
                })
                .catch(error => {
                    // Hide loader
                    spinner.style.display = "none";
                    console.error("Download failed:", error);
                    alert("Server is not responding. Please try again.");
                });
        });
    });
</script>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">