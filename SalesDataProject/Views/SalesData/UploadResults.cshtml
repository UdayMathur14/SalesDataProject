@{
}
@using System.Text.Json
@{
    ViewData["Title"] = "Mailing Result";
}

@model SalesDataProject.Models.UploadResultViewModel
@if (TempData["Success"] != null)
{
    <div class="error-message" id="errorMessage">
        <p>@TempData["Success"]</p>
    </div>
}
<div class="header d-flex justify-content-between align-items-center mb-4 p-3 shadow-sm rounded" style="background-color: #f8f9fa;">
    <h2 class="text m-0">Mailing Outcome</h2>
    <div class="buttons d-flex gap-2">
        <a href="@Url.Action("ViewRecords", "SalesData")" class="text-decoration-none">
            <button type="button" class="btn btn-danger px-4 py-2">Back</button>
        </a>
    </div>
</div>
<div class="container mt-4">
    @* <h2 class="text-center mb-4">Result</h2> *@

    <div class="card mb-4 shadow">
        <div class="card-body">
            <h3 class="text-secondary">Blocked Customers</h3>
            <div style="max-height: 600px; overflow-y: auto; border: 1px solid #ddd; border-radius: 5px;">
                <table class="table table-bordered">
                    <thead class="thead-light">
                        <tr>
                            <th>Company Name</th>
                            <th>Email</th>
                            <th>Contact Number</th>
                            <th>Blocked By</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var customer in Model.BlockedCustomers)
                        {
                            <tr>
                                <td>@customer.COMPANY_NAME</td>
                                <td>@customer.CUSTOMER_EMAIL</td>
                                <td>@customer.CUSTOMER_CONTACT_NUMBER1</td>
                                <td>@customer.BLOCKED_BY</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <div class="card mb-4 shadow">
        <div class="card-body">
            <h3 class="text-secondary">Clean Customers</h3>
            <div style="max-height: 600px; overflow-y: auto; border: 1px solid #ddd; border-radius: 5px;">

                <table class="table table-bordered">
                    <thead class="thead-light">
                        <tr>
                            <th>Company Name</th>
                            <th>Email</th>
                            <th>Contact Number</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var customer in Model.CleanCustomers)
                        {
                            <tr>
                                <td>@customer.COMPANY_NAME</td>
                                <td>@customer.CUSTOMER_EMAIL</td>
                                <td>@customer.CUSTOMER_CONTACT_NUMBER1</td>
                            </tr>
                        }
                    </tbody>
                </table>

            </div>
        </div>
    </div>
    <div class="card mb-4 shadow">
        <div class="card-body">
            <h3 class="text-secondary">Invalid Details or duplicate data</h3>
            <div style="max-height: 600px; overflow-y: auto; border: 1px solid #ddd; border-radius: 5px;">

                <table class="table table-bordered">
                    <thead class="thead-light">
                        <tr>
                            <th>Row</th>
                            <th>Company Name</th>
                            <th>Email</th>
                            <th>Contact Number</th>
                            <th>Error Message</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var customer in Model.invalidCustomerRecords)
                        {
                            <tr>
                                <td>@customer.RowNumber</td>
                                <td>@customer.CompanyName</td>
                                <td>@customer.CustomerEmail</td>
                                <td>@customer.CustomerNumber</td>
                                <td>@customer.ErrorMessage</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <div class="text-center">
        <form asp-action="ExportToExcel" method="post">
            <input type="hidden" name="BlockedCustomersJson" value="@JsonSerializer.Serialize(Model.BlockedCustomers)" />
            <input type="hidden" name="CleanCustomersJson" value="@JsonSerializer.Serialize(Model.CleanCustomers)" />
            <input type="hidden" name="InvalidCustomersJson" value="@JsonSerializer.Serialize(Model.invalidCustomerRecords)" />
            <button id="exportLink" type="submit" class="btn btn-success">Export to Excel</button>
        </form>
    </div>
</div>

<!-- Add some custom CSS if needed -->
<style>
    .card {
        border-radius: 10px;
    }

    .table {
        border-radius: 10px;
        overflow: hidden;
    }

    .thead-light th {
        background-color: #f8f9fa;
        color: #495057;
    }
</style>
<style>
    .error-message {
        position: fixed;
        top: 20px;
        right: 20px;
        background-color: lightgreen; /* Softer red for a less intense tone */
        color: black;
        padding: 10px 10px;
        border-radius: 8px;
        font-size: 16px;
        font-weight: 500;
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3);
        z-index: 1000;
        transition: opacity 0.4s ease-out;
        opacity: 0.95;
    }
</style>

<script>
    // Automatically hide the error message after 5 seconds
    setTimeout(() => {
        const errorMessage = document.getElementById('errorMessage');
        if (errorMessage) {
            errorMessage.style.display = 'none';
        }
    }, 2000);
</script>

@section Scripts {
    <script type="text/javascript">
        document.getElementById('exportLink').addEventListener('click', function () {
            setTimeout(function () {
                window.location.href = '@Url.Action("ViewRecords")';
            }, 2000); // Wait for 2 seconds to allow the download to start
        });
    </script>
}