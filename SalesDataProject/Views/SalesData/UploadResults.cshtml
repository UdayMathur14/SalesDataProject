@{
}
@using System.Text.Json
@{
    ViewData["Title"] = "Mailing Result";
}

@model SalesDataProject.Models.UploadResultViewModel
<div class="container mt-5 shadow-lg p-4 rounded-3 bg-grey enhanced-container" style="width:1700px">
    <div class="d-flex justify-content-between align-items-center mb-4 text-black rounded-2 p-3 shadow-sm" style="background-color:gainsboro">
        <h2 class="fw-semibold m-0"><i class="bi bi-envelope-check-fill me-2"></i> Mailing Outcome</h2>
        <a href="@Url.Action("ViewRecords", "SalesData")" class="btn rounded-pill" style="background-color:black;color:white"><i class="bi bi-arrow-left-circle me-1"></i> Back to Records</a>
    </div>

    <div class="card shadow-sm mb-4 border-danger border-2 rounded-3">
        <div class="card-header bg-danger text-white py-3 rounded-top-3">
            <h5 class="card-title fw-semibold m-0"><i class="bi bi-x-octagon-fill me-2"></i> Blocked Customers</h5>
        </div>
        <div class="card-body p-3">
            <div class="table-responsive" style="max-height: 350px;">
                <table class="table table-hover align-middle">
                    <thead class="bg-light text-secondary border-bottom">
                        <tr>
                            <th><em>Company Name</em></th>
                            <th><em>Email</em></th>
                            <th><em>Contact Number</em></th>
                            <th><em>Category</em></th>
                            <th><em>Blocked Reason</em></th>
                            <th><em>Blocked By</em></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var customer in Model.BlockedCustomers)
                        {
                            <tr>
                                <td>@customer.COMPANY_NAME</td>
                                <td><a href="mailto:@customer.CUSTOMER_EMAIL" class="text-decoration-none text-info"><em>@customer.CUSTOMER_EMAIL</em></a></td>
                                <td>@customer.CUSTOMER_CONTACT_NUMBER1</td>
                                <td>@customer.CATEGORY</td>
                                <td>@customer.BLOCK_REASON</td>
                                <td><em class="text-muted">@customer.BLOCKED_BY</em></td>
                            </tr>
                        }
                    </tbody>
                </table>
                @if (!Model.BlockedCustomers.Any())
                {
                    <div class="alert alert-warning mt-2 mb-0 border rounded" role="alert"><i class="bi bi-exclamation-triangle-fill me-2"></i> <em>No blocked customers to display.</em></div>
                }
            </div>
        </div>
    </div>

    <div class="card shadow-sm mb-4 border-success border-2 rounded-3">
        <div class="card-header bg-success text-white py-3 rounded-top-3">
            <h5 class="card-title fw-semibold m-0"><i class="bi bi-check-circle-fill me-2"></i> Clean Customers</h5>
        </div>
        <div class="card-body p-3">
            <div class="table-responsive" style="max-height: 350px;">
                <table class="table table-hover align-middle">
                    <thead class="bg-light text-secondary border-bottom">
                        <tr>
                            <th><em>Company Name</em></th>
                            <th><em>Email</em></th>
                            <th><em>Contact Number</em></th>
                            <th><em>Country</em></th>
                            <th><em>Catergory</em></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var customer in Model.CleanCustomers)
                        {
                            <tr class="table-row-clean">
                                <td>@customer.COMPANY_NAME</td>
                                <td><a href="mailto:@customer.CUSTOMER_EMAIL" class="text-decoration-none text-info"><em>@customer.CUSTOMER_EMAIL</em></a></td>
                                <td>@customer.CUSTOMER_CONTACT_NUMBER1</td>
                                <td>@customer.COUNTRY</td>
                                <td>@customer.CATEGORY</td>
                            </tr>
                        }
                    </tbody>
                </table>
                @if (!Model.CleanCustomers.Any())
                {
                    <div class="alert alert-warning mt-2 mb-0 border rounded" role="alert"><i class="bi bi-exclamation-triangle-fill me-2"></i> <em>No clean customers to display.</em></div>
                }
            </div>
        </div>
    </div>

    <div class="card shadow-sm mb-4 border-warning border-2 rounded-3">
        <div class="card-header bg-warning text-dark py-3 rounded-top-3">
            <h5 class="card-title fw-semibold m-0"><i class="bi bi-exclamation-triangle-fill me-2"></i> Invalid or Duplicate Data</h5>
        </div>
        <div class="card-body p-3">
            <div class="table-responsive" style="max-height: 350px;">
                <table class="table table-hover align-middle">
                    <thead class="bg-light text-secondary border-bottom">
                        <tr>
                            <th><em>Row</em></th>
                            <th><em>Company Name</em></th>
                            <th><em>Email</em></th>
                            <th><em>Contact Number</em></th>
                            <th><em>Error Message</em></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var customer in Model.invalidCustomerRecords)
                        {
                            <tr class="table-row-invalid">
                                <td><em class="text-muted">@customer.RowNumber</em></td>
                                <td>@customer.CompanyName</td>
                                <td><a href="mailto:@customer.CustomerEmail" class="text-decoration-none text-info"><em>@customer.CustomerEmail</em></a></td>
                                <td>@customer.CustomerNumber</td>
                                <td class="text-danger fw-semibold"><em>@customer.ErrorMessage</em></td>
                            </tr>
                        }
                    </tbody>
                </table>
                @if (!Model.invalidCustomerRecords.Any())
                {
                    <div class="alert alert-warning mt-2 mb-0 border rounded" role="alert"><i class="bi bi-exclamation-triangle-fill me-2"></i> <em>No invalid or duplicate records to display.</em></div>
                }
            </div>
        </div>
    </div>

    <div class="text-center mt-4">
        <form asp-action="ExportToExcel" method="post">
            <input type="hidden" name="BlockedCustomersJson" value="@JsonSerializer.Serialize(Model.BlockedCustomers)" />
            <input type="hidden" name="CleanCustomersJson" value="@JsonSerializer.Serialize(Model.CleanCustomers)" />
            <input type="hidden" name="InvalidCustomersJson" value="@JsonSerializer.Serialize(Model.invalidCustomerRecords)" />
            <button id="exportLink" type="submit" class="btn btn-success btn-lg rounded-pill px-4 py-2"><i class="bi bi-file-earmark-arrow-down-fill me-2"></i> Export to Excel</button>
        </form>
    </div>
</div>

<style>
    .enhanced-container {
        margin-top: 3rem !important; /* Adjust top margin */
        padding: 2.5rem !important; /* Slightly increased padding */
        border-radius: 1rem !important; /* Even more rounded corners */
        background-color: #f8f9fa !important; /* Very light gray background */
        
        border: 1px solid #dee2e6; /* Very light gray border */
        transition: box-shadow 0.3s ease-in-out; /* Smooth shadow transition on hover (optional) */
    }
   

    body {
        background-color: #f8f9fa; /* Light gray background */
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        line-height: 1.6;
    }

    .bg-primary {
        background-color: #007bff !important; /* Vibrant primary blue */
    }

    .btn-primary {
        background-color: #007bff;
        border-color: #007bff;
    }

    .btn-outline-light {
        color: #fff;
        border-color: #fff;
    }

        .btn-outline-light:hover {
            background-color: #f8f9fa;
            color: #007bff;
            border-color: #f8f9fa;
        }

    .card-header.bg-danger {
        background-color: #dc3545 !important; /* Vibrant red */
    }

    .card-header.bg-success {
        background-color: #28a745 !important; /* Vibrant green */
    }

    .card-header.bg-warning {
        background-color: #ffc107 !important; /* Vibrant yellow */
        color: #212529 !important;
    }

    .table {
        background-color: #fff;
        border-collapse: collapse;
        border-spacing: 0;
        width: 100%;
        margin-bottom: 1rem;
        border-radius: 0.3rem;
        overflow: hidden;
        box-shadow: 0 0.15rem 0.25rem rgba(0, 0, 0, 0.03);
        border: 1px solid #e3e6f0; /* Subtle border for the table */
    }

        .table thead th {
            color: #495057;
            font-weight: 500;
        }

        .table tbody td {
            color: #6c757d;
        }

        .table tbody tr {
            background-color: #fff; /* Default white background */
            transition: background-color 0.3s ease; /* Smooth transition for hover */
        }

            .table tbody tr:nth-child(even) {
                background-color: #f9f9f9; /* Very light gray for even rows */
            }

            .table tbody tr:hover {
                background-color: #e0f7fa; /* Light cyan on hover */
            }

    .table-row-clean {
        /* You could add a subtle background color for clean rows if desired */
    }

    .table-row-invalid {
        /* You could add a subtle background color for invalid rows if desired */
    }

    .text-info {
        color: #17a2b8 !important; /* Vibrant info blue */
    }

    .alert-warning {
        background-color: #fff3cd;
        border-color: #ffeeba;
        color: #85640a;
    }

    .rounded-pill {
        border-radius: 50rem !important; /* Pill-shaped buttons */
    }

    .shadow-sm {
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.03) !important;
    }

    em {
        font-style: italic;
    }
</style>

<!-- JavaScript to Redirect After Export -->
@section Scripts {
    <script>
        document.getElementById('exportLink').addEventListener('click', function () {
            setTimeout(function () {
                window.location.href = '@Url.Action("ViewRecords")';
            }, 2000);
        });
    </script>
}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">

