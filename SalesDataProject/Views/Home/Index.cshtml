@{
    ViewData["Title"] = "Home Page";
    var canAccessCustomer = Context.Session.GetString("CanAccessCustomer") == "True";
    var canAccessSales = Context.Session.GetString("CanAccessSales") == "True";
    var canAccessUserManagement = Context.Session.GetString("CanAccessUserManagement") == "True";
    var canAccessTitle = Context.Session.GetString("CanAccessTitle") == "True";
    var canDeleteTitle = Context.Session.GetString("CanDeleteTitle") == "True";
}
@{
    ViewData["Title"] = "";
}

@if (TempData["Success"] != null)
{
    <div class="error-message" id="errorMessage" >
        <p>@TempData["Success"]</p>
    </div>
}
<div class="container mt-5">
    <h2 class="mb-5 text-center display-5 text-dark" style="font-weight: bold; font-style: italic; font-size: 2.0rem">Explore Our Modules</h2>
    <div class="row">
        <!-- Customer Module Card -->
        @if (canAccessCustomer)
        {
            <div class="col-md-3 col-lg-3 mb-5">
                <div class="card custom-card shadow-lg border-0 rounded-3">
                    <div class="gradient-bg" style="background:linear-gradient(135deg, #0000ff, #feb47b);">
                        <i class="fas fa-users fa-3x"></i>
                    </div>
                    <div class="card-content">
                        <h5 class="card-title" style="color:grey">Customer Module</h5>
                        <p class="card-text">Upload customer data, view customer details, and more.</p>
                        <a href="@Url.Action("ViewCustomers", "Customer")" class="btn btn-primary">Customer Module</a>
                    </div>
                </div>
            </div>
        }

        <!-- Sales Data Card -->
        @if (canAccessSales)
        {
            <div class="col-md-3 col-lg-3 mb-5">
                <div class="card custom-card shadow-lg border-0 rounded-3">
                    <div class="gradient-bg" style="background:linear-gradient(135deg, #0000ff, #feb47b);">

                        <i class="fas fa-chart-line fa-3x"></i>
                    </div>
                    <div class="card-content">
                        <h5 class="card-title" style="color:brown">Mailing Module</h5>
                        <p class="card-text">Upload Sales Data and view Blocked/Clean records.</p>
                        <a href="@Url.Action("ViewRecords", "SalesData")" class="btn btn-primary">Sales Module</a>
                    </div>
                </div>
            </div>
        }
        @if (canAccessUserManagement)
        {
            <div class="col-md-3 col-lg-3 mb-5">
                <a href="@Url.Action("ManageUsers", "Auth")"></a>
                <div class="card custom-card shadow-lg border-0 rounded-3">
                    <div class="gradient-bg" style="background:linear-gradient(13deg, #0000ff, #feb47b);">

                        <i class="fas fa-chart-line fa-3x"></i>
                    </div>
                    <div class="card-content">
                        <h5 class="card-title" style="color:blueviolet">User Management</h5>
                        <p class="card-text">User Management Add/Delete and Permissions</p>
                        <a href="@Url.Action("ManageUsers", "Auth")" class="btn btn-primary">User Module</a>
                    </div>
                </div>
            </div>
        }
        @if (canAccessTitle)
        {
            <div class="col-md-3 col-lg-3 mb-5">
                <div class="card custom-card shadow-lg border-0 rounded-3">
                    <div class="gradient-bg" style="background:linear-gradient(135deg, #0000ff, #feb47b);">

                        <i class="fas fa-chart-line fa-3x"></i>
                    </div>
                    <div class="card-content">
                        <h5 class="card-title" style="color:green">Title <br> Validation</h5>
                        <p class="card-text">Validate your Titiles here and upload insert or delete titles </p>
                        <a href="@Url.Action("Index", "Title")" class="btn btn-primary">Title Module</a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<style>
    /* General Container Adjustments */
    .container {
        margin: 0 auto;
    }

    .custom-card {
        display: flex;
        background: #fff;
        border-radius: 15px;
        overflow: hidden;
        box-shadow: 0 18px 28px rgba(0, 0, 0, 0.15);
        /* transition: transform 0.3s ease, box-shadow 0.3s ease; */
        min-height: 375px;
        border: 1px solid black; 
    }

        .custom-card:hover { 
            background-color: aquamarine;
        }

    .gradient-bg {
        background: linear-gradient(135deg, #ff7e5f, #feb47b);
        padding: 30px;
        display: flex;
        align-items: center;
        justify-content: center;
        /* width: 150px; */
        /* flex-shrink: 0; */
        color: white;
        /* transition: transform 0.3s ease; */
    }

    /* .custom-card:hover .gradient-bg { */
    /*     transform: scale(1.1); */
    /* } */

    .card-content {
        padding: 35px;
        text-align: left;
    }

    .card-title {
        font-size: 1.6rem;
        font-weight: 700;
        color: red;
        margin-bottom: 15px;
    }

    .card-text {
        font-size: 1.05rem;
        color: #555;
        margin-bottom: 25px;
    }

    .btn-primary {
        background-color: black;
        border: none;
        color: white;
        text-transform: uppercase;
        font-weight: 600;
        padding: 12px 24px;
        border-radius: 40px;
        transition: background-color 0.1s, box-shadow 0.3s;
        /* min-height: 75px; */
    }

        .btn-primary:hover {
            background-color: peru;
            box-shadow: 0 4px 8px rgba(400, 200, 100, 0.8);
        }

    /* Heading Styles */
    .display-5 {
        font-size: 2.5rem;
        color: #333;
    }

    /* Spacing adjustments */
    /* .row { */
    /*     gap: 50px; /* Increased space between cards */ */
    /* } */
</style>
<style>
    .error-message {
        position: fixed;
        top: 20px;
        right: 20px;
        background-color: lightgreen; /* Softer red for a less intense tone */
        color: black;
        padding: 10px 10px;
        border-radius: 8px;
        font-size: 16px;
        font-weight: 500;
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3);
        z-index: 1000;
        transition: opacity 0.3s ease-out;
        opacity: 0.95;
        display:flex;
        align-items:center;
    }
</style>
<script>
    // Automatically hide the error message after 5 seconds
    setTimeout(() => {
        const errorMessage = document.getElementById('errorMessage');
        if (errorMessage) {
            errorMessage.style.display = 'none';
        }
    }, 1500);
</script>