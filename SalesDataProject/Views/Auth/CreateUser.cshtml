@model SalesDataProject.Models.AuthenticationModels.User
@{
    ViewData["Title"] = "Create User";
    var users = ViewBag.Users as List<SalesDataProject.Models.AuthenticationModels.User>;
}
<div class="container">
    <div class="d-flex justify-content-end mb-3">
        <a href="@Url.Action("ManageUsers", "Auth")" class="btn btn-outline-danger">
            <i class="fas fa-arrow-left"></i> Back
        </a>
    </div>

    <div class="card shadow-lg border-0 rounded-3 p-4 mx-auto" style="max-width: 550px;">
        <h2 class="text-center mb-4">Create New User</h2>

        <form asp-action="CreateUser" method="post">
            <div class="mb-3">
                <label asp-for="Username" class="form-label fw-bold">Username</label>
                <input type="text" asp-for="Username" class="form-control" placeholder="Enter username">
                <span asp-validation-for="Username" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="Password" class="form-label fw-bold">Password</label>
                <input type="password" asp-for="Password" class="form-control" placeholder="Enter password">
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>

            <h5 class="fw-bold mt-3">Access Permissions</h5>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-check">
                        <input type="checkbox" asp-for="CanAccessCustomer" class="form-check-input">
                        <label asp-for="CanAccessCustomer" class="form-check-label">Customer Module</label>
                    </div>
                    <div class="form-check">
                        <input type="checkbox" asp-for="CanAccessSales" class="form-check-input">
                        <label asp-for="CanAccessSales" class="form-check-label">Mailing Module</label>
                    </div>
                    <div class="form-check">
                        <input type="checkbox" asp-for="CanAccessUserManagement" class="form-check-input">
                        <label asp-for="CanAccessUserManagement" class="form-check-label">Admin Module</label>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-check">
                        <input type="checkbox" asp-for="CanAccessTitle" class="form-check-input">
                        <label asp-for="CanAccessTitle" class="form-check-label">Title Module</label>
                    </div>
                    <div class="form-check">
                        <input type="checkbox" asp-for="CanViewTitles" class="form-check-input">
                        <label asp-for="CanViewTitles" class="form-check-label">View Titles</label>
                    </div>
                    <div class="form-check">
                        <input type="checkbox" asp-for="CanDeleteTitles" class="form-check-input">
                        <label asp-for="CanDeleteTitles" class="form-check-label">Delete Titles</label>
                    </div>
                </div>
            </div>

            <div class="text-center mt-4">
                <button type="submit" class="btn btn-success btn-lg px-4">Create User</button>
            </div>
        </form>
    </div>

    <div class="mt-5">
        <h3 class="text-center mb-4" style="color:cornflowerblue;text-decoration:underline">User List</h3>
        <table class="table table-bordered table-hover shadow">
            <thead class="table-dark">
                <tr>
                    <th>ID</th>
                    <th>Username</th>
                    <th>Password</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @if (users != null && users.Count > 0)
                {
                    @foreach (var user in users)
                    {
                        <tr id="row-@user.Id">
                            <td>@user.Id</td>

                            <!-- Editable Username Field -->
                            <td>
                                <span id="text-username-@user.Id">@user.Username</span>
                                <input type="text" id="input-username-@user.Id" class="form-control d-none" value="@user.Username" />
                            </td>

                            <!-- Editable Password Field with View Toggle -->
                            <td>
                                <div class="d-flex align-items-center">
                                    <input type="password" id="input-password-@user.Id" class="form-control" value="@user.Password" disabled />
                                    <button type="button" class="btn btn-info btn-sm ms-2" onclick="togglePassword(@user.Id)">
                                        👁️
                                    </button>
                                </div>
                            </td>

                            <td>
                                <!-- Edit Button -->
                                <button type="button" class="btn btn-warning btn-sm" onclick="editUser(@user.Id)">Edit</button>

                                <!-- Save Button (Hidden initially) -->
                                <button type="button" class="btn btn-success btn-sm d-none" id="save-btn-@user.Id" onclick="saveUser(@user.Id)">Save</button>

                                <!-- Delete Button -->
                                <a href="@Url.Action("DeleteUser", "Auth", new { id = user.Id })" class="btn btn-danger btn-sm" onclick="return confirm('Are you sure you want to delete this user?');">Delete</a>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="4" class="text-center">No users found.</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>


</div>

<style>
    h2 {
        color: #4A90E2;
        font-weight: bold;
        font-size: 1.8rem;
    }

    form.container {
        background-color: #ffffff;
        border: 1px solid #e0e0e0;
    }

    .form-control {
        border-radius: 5px;
        border: 1px solid #ced4da;
        transition: border-color 0.3s, box-shadow 0.3s;
    }

        .form-control:focus {
            border-color: #4A90E2;
            box-shadow: 0 0 5px rgba(74, 144, 226, 0.5);
        }

    .form-label {
        color: #333;
    }

    .btn-primary {
        background-color: #4A90E2;
        border: none;
        transition: background-color 0.3s;
    }

        .btn-primary:hover {
            background-color: #357ABD;
        }

    .form-check-label {
        font-size: 1rem;
        color: #495057;
    }

    .form-check-input:checked {
        background-color: #4A90E2;
        border-color: #4A90E2;
    }

    .shadow {
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
    }

    .rounded {
        border-radius: 10px;
    }

    .text-danger {
        font-size: 0.9rem;
    }
</style>
<script>
    function togglePassword(userId) {
        var passwordInput = document.getElementById("input-password-" + userId);
        if (passwordInput.type === "password") {
            passwordInput.type = "text";
        } else {
            passwordInput.type = "password";
        }
    }

    function editUser(userId) {
        document.getElementById("text-username-" + userId).classList.add("d-none");
        document.getElementById("input-username-" + userId).classList.remove("d-none");
        document.getElementById("input-password-" + userId).disabled = false;

        event.target.classList.add("d-none"); // Hide Edit button
        document.getElementById("save-btn-" + userId).classList.remove("d-none"); // Show Save button
    }

    function saveUser(userId) {
        var username = document.getElementById("input-username-" + userId).value;
        var password = document.getElementById("input-password-" + userId).value;

        fetch("/Auth/EditUser", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({
                Id: userId,
                Username: username,
                Password: password
            })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                document.getElementById("text-username-" + userId).innerText = username;
                document.getElementById("text-username-" + userId).classList.remove("d-none");
                document.getElementById("input-username-" + userId).classList.add("d-none");
                document.getElementById("input-password-" + userId).disabled = true;

                document.getElementById("save-btn-" + userId).classList.add("d-none");
                document.querySelector(`#row-${userId} .btn-warning`).classList.remove("d-none");

                alert("User updated successfully!");
            } else {
                alert("Error updating user.");
            }
        })
        .catch(error => console.error("Error:", error));
    }
</script>
