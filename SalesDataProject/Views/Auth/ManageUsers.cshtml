@model IEnumerable<SalesDataProject.Models.AuthenticationModels.User>

@{
    var userList = Model.ToList();
}
@{
    ViewData["Title"] = "ManageUsers";
}

@if (TempData["Success"] != null)
{
    <div class="error-message" id="errorMessage">
        <p>@TempData["Success"]</p>
    </div>
}

<div class="header d-flex justify-content-between">
<h2 style="color:black" class="text-center">Manage Users Permissions</h2>

    <div class="d-flex justify-content-end mb-3 gap-2">
        <form asp-action="AddRecord" method="get">
            <button type="submit" class="btn btn-dark">Add Record/Domain</button>
        </form>
        <form asp-action="AssignRecords" method="get">
            <button type="submit" class="btn btn-primary">Assign Record</button>
        </form>
        <form asp-action="ChangeRecordType" method="get">
            <button type="submit" class="btn btn-warning">Change Record</button>
        </form>
        <form asp-action="CreateUser" method="get">
            <button type="submit" class="btn btn-danger">Create User</button>
        </form>

        <a href="@Url.Action("Index", "Home")" class="">
            <button style="background-color:red;height:40px;width:60px;color:white" type="submit" class="btn btn-danger">Back</button>
            </a>
        
        
    </div>
</div>

<form asp-action="UpdateUserAccess" method="post">
    <div class="table-responsive">
        <table class="table table-striped table-bordered table-hover">
            <thead class="table-dark">
                <!-- Changed from thead-dark to table-dark -->
                <tr>
                    <th>Username</th>
                    <th>Customer Module</th>
                    <th>Mailing Data Module</th>
                    <th>User Management Module</th>
                    <th>Title Module</th>
                    <th>View Titles</th>
                    <th>Delete Titles</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < userList.Count; i++)
                {
                    <tr>
                        <td class="align-middle">
                            @userList[i].Username
                            <input type="hidden" name="Users[@i].Username" value="@userList[i].Username" />
                        </td>
                        <td class="text-center align-middle">
                            <input type="checkbox" name="Users[@i].CanAccessCustomer"
                                   value="true" @(userList[i].CanAccessCustomer ? "checked" : "") class="form-check-input mx-auto" />
                            <input type="hidden" name="Users[@i].CanAccessCustomer" value="false" />
                        </td>
                        <td class="text-center align-middle">
                            <input type="checkbox" name="Users[@i].CanAccessSales"
                                   value="true" @(userList[i].CanAccessSales ? "checked" : "") class="form-check-input mx-auto" />
                            <input type="hidden" name="Users[@i].CanAccessSales" value="false" />
                        </td>
                        <td class="text-center align-middle">
                            <input type="checkbox" name="Users[@i].CanAccessUserManagement"
                                   value="true" @(userList[i].CanAccessUserManagement ? "checked" : "") class="form-check-input mx-auto" />
                            <input type="hidden" name="Users[@i].CanAccessUserManagement" value="false" />
                        </td>
                        
                        <td class="text-center align-middle">
                            <input type="checkbox" name="Users[@i].CanAccessTitle"
                                   value="true" @(userList[i].CanAccessTitle ? "checked" : "") class="form-check-input mx-auto" />
                            <input type="hidden" name="Users[@i].CanAccessTitle" value="false" />
                        </td>
                        <td class="text-center align-middle">
                            <input type="checkbox" name="Users[@i].CanViewTitles"
                                   value="true" @(userList[i].CanViewTitles ? "checked" : "") class="form-check-input mx-auto" />
                            <input type="hidden" name="Users[@i].CanViewTitles" value="false" />
                        </td>
                        <td class="text-center align-middle">
                            <input type="checkbox" name="Users[@i].CanDeleteTitles"
                                   value="true" @(userList[i].CanDeleteTitles ? "checked" : "") class="form-check-input mx-auto" />
                            <input type="hidden" name="Users[@i].CanDeleteTitles" value="false" />
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="text-center mt-4">
        <button type="submit" class="btn btn-success">Update Access</button>
    </div>
</form>

<style>
    h2 {
        font-size: 1.8rem;
        font-weight: bold;
        color: #4A90E2;
    }

    table {
        border-collapse: separate;
        border-spacing: 0;
        border-color:black;
    }

    th, td {
        padding: 12px 15px;
    }

    th {
        background-color: black; /* This will act as a fallback color */
        color: white;
        text-align: center;
    }

    .btn-primary {
        font-weight: 600;
    }

    .btn-success {
        padding: 10px 20px;
        font-size: 1rem;
        font-weight: 600;
    }

    .table-striped tbody tr:nth-of-type(odd) {
        background-color: khaki; /* Light gray */
    }

    .table-striped tbody tr:nth-of-type(even) {
        background-color: antiquewhite; /* White */
    }

    .table-striped tbody tr:hover {
        background-color: lightgrey; /* Light blue for hover effect */
    }

    td.align-middle {
        vertical-align: middle;
    }
</style>
<style>
    .error-message {
        position: fixed;
        top: 20px;
        right: 20px;
        background-color: lightgreen; /* Softer red for a less intense tone */
        color: black;
        padding: 10px 10px;
        border-radius: 8px;
        font-size: 16px;
        font-weight: 500;
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3);
        z-index: 1000;
        transition: opacity 0.4s ease-out;
        opacity: 0.95;
        display: flex;
        align-items: center;
    }
</style>
<script>
    // Automatically hide the error message after 5 seconds
    setTimeout(() => {
        const errorMessage = document.getElementById('errorMessage');
        if (errorMessage) {
            errorMessage.style.display = 'none';
        }
    }, 2500);
</script>