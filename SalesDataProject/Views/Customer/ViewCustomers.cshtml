@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@model IEnumerable<SalesDataProject.Models.Customer>

@{
    ViewData["Title"] = "Company Records";
}

<style>
    .table-header {
        background-color: darkslateblue;
        color: white;
    }
</style>

<div class="container mt-4">
    <div class="header d-flex justify-content-between">
        <h2>Company Records</h2>
        <div class="buttons d-flex gap-2">

            <a href="@Url.Action("Index", "Customer")" class="">
                <button type="submit" class="btn btn-success">Create</button>
            </a>
            <form asp-action="UploadExcel" method="post" enctype="multipart/form-data" id="uploadForm">
                <input type="file" id="fileUpload" name="file" class="form-control-file" required style="display: none;" />
                <button type="button" id="uploadButton" class="btn btn-success ml-4 mb-4">Upload Excel</button>
            </form>
            <form>
                <button type="submit" class="btn btn-success" id="downloadBtn">Download Template</button>
            </form>

            <a href="@Url.Action("Index", "Home")" class="">
                <button style="background-color:red" type="submit" class="btn btn-success">Back</button>
            </a>
        </div>
    </div>
    <div style="max-height: 800px; overflow-y: auto; border: 1px solid #ddd; border-radius: 5px;">
        <table class="table table-striped">
            <thead class="table-header">
                <tr>
                    @* <th>Customer Code</th> *@
                    <th>Company Name</th>
                    <th>Email</th>
                    <th>Contact Number</th>
                    <th>Country</th>
                    <th>Contact Person</th>
                    <th>Category</th>
                    <th>Created By</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var customer in Model)
                {
                    <tr>
                        @* <td>@customer.CUSTOMER_CODE</td> *@
                        <td>@customer.COMPANY_NAME</td>
                        <td>@customer.CUSTOMER_EMAIL</td>
                        <td>@customer.CUSTOMER_CONTACT_NUMBER1</td>
                        <td>@customer.COUNTRY</td>
                        <td>@customer.CONTACT_PERSON</td>
                        <td>@customer.CATEGORY</td>
                        <td>@customer.CREATED_BY</td>
                    </tr>
                }
            </tbody>
        </table>

    </div>
</div>


<script>
    document.addEventListener('DOMContentLoaded', function () {
        const uploadButton = document.getElementById('uploadButton');
        const fileUpload = document.getElementById('fileUpload');
        const uploadForm = document.getElementById('uploadForm');

        if (uploadButton && fileUpload && uploadForm) {
            uploadButton.addEventListener('click', function () {
                fileUpload.click();
            });

            fileUpload.addEventListener('change', function () {
                if (fileUpload.files.length > 0) {
                    showSpinner(); // Show loader
                    uploadForm.submit();
                }
            });
        }
    });

    function showSpinner() {
        document.getElementById("spinner-overlay").style.display = "flex";
    }

    function hideSpinner() {
        document.getElementById("spinner-overlay").style.display = "none";
    }

    // Automatically hide spinner when the page reloads (after request completes)
    window.addEventListener('load', function () {
        hideSpinner();
    });
</script>


<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>



<script>
    document.addEventListener("DOMContentLoaded", function () {
        const downloadBtn = document.getElementById("downloadBtn");
        if (!downloadBtn) {
            console.error("Download button not found in the DOM.");
            return;
        }

        downloadBtn.addEventListener("click", function (event) {
            // If the button is inside a form, prevent its default behavior
            event.preventDefault();

            const spinner = document.getElementById("spinner-overlay");
            if (!spinner) {
                console.error("Spinner overlay element not found!");
                return;
            }

            // Show loader
            spinner.style.display = "flex";

            // Fetch the file from the server
            fetch('/Customer/DownloadTemplate', { method: 'GET' })
                .then(response => {
                    if (!response.ok) {
                        throw new Error("Server responded with " + response.status);
                    }
                    return response.blob(); // Convert response to Blob
                })
                .then(blob => {
                    // Hide loader
                    spinner.style.display = "none";

                    // Create a temporary link element to trigger the download
                    const link = document.createElement("a");
                    link.href = window.URL.createObjectURL(blob);
                    link.download = "CustomerTemplate.xlsx"; // Set the file name
                    document.body.appendChild(link);
                    link.click(); // Trigger the download
                    document.body.removeChild(link); // Clean up the temporary link
                })
                .catch(error => {
                    // Hide loader in case of error
                    spinner.style.display = "none";
                    console.error("Download failed:", error);
                    alert("Download failed: " + error.message);
                });
        });
    });
</script>