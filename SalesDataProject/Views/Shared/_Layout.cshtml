<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/SalesDataProject.styles.css" asp-append-version="true" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">

    <style>
        .navbar-nav .nav-link {
            transition: all 0.1s ease-in-out !important;
        }

            .navbar-nav .nav-link:hover {
                color: red !important; /* Bootstrap primary color */
                text-decoration: underline !important;
            }
    </style>
    <style>
        .circle {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background-color: black !important; /* Bootstrap Primary Color */
            display: flex;
            justify-content: center;
            align-items: center;
            cursor: pointer;
        }

            .circle:hover {
                background-color: #0056b3; /* Darker shade for hover effect */
            }

    </style>

    <style>
        /* Full-screen overlay */
        #spinner-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            /* background-color: rgba(255, 255, 255, 0.2); /* Semi-transparent background */
            display: none;
            justify-content: center;
            align-items: center;
            z-index: 9999;
            backdrop-filter: blur(1px);
        }

        /* Increase spinner size */
        #spinner {
            width: 5rem;
            height: 5rem;
            color: black;
        }
    </style>

</head>
<body style="background-color:white">
    <header>
        <nav class="navbar navbar-expand-sm navbar-light bg-white border-bottom shadow-sm mb-3">
            <div class="container-fluid">
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1 justify-content-start align-items-center gap-4">
                        <li class="nav-item">
                            <a class="nav-link fw-bold fst-italic fs-5 text-uppercase"
                               asp-area="" asp-controller="Home" asp-action="Index">
                                Dashboard
                            </a>
                        </li>
                    </ul>

                    <div class="d-flex align-items-center gap-3">
                        <!-- Circle Icon -->
                        <div class="circle bg-primary d-flex justify-content-center align-items-center">
                            <a href="#profileMenu" data-bs-toggle="dropdown" aria-expanded="false" class="text-white text-decoration-none">
                                <i class="bi bi-person fs-5"></i>
                            </a>
                            <!-- Dropdown Menu -->
                            <ul class="dropdown-menu dropdown-menu-end shadow-sm" id="profileMenu">
                                <li>
                                    <form asp-area="" asp-controller="Auth" asp-action="Logout" method="post" style="display: inline;">
                                        <button type="submit" class="dropdown-item">Logout</button>
                                    </form>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </nav>
    </header>

    <div class="container">
        @if (TempData["Message"] != null)
        {
            <div class="alert-message @(TempData["MessageType"] == "Error" ? "error" : "success")"
                 id="alertMessage" role="alert">
                <p>@TempData["Message"]</p>
                <button class="close-btn" onclick="closeAlertMessage()">×</button>
            </div>
        }
    </div>
    <main role="main" class="pb-3">
        <div id="spinner-overlay">
            <div id="spinner" class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
        @RenderBody()
    </main>


    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2025 - Ennoble IP 
        </div>
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)

    @* // This is for the display message  *@
    <style>
        .alert-message {
            position: fixed;
            top: 20px;
            right: 20px;
            color: #ffffff;
            padding: 12px 16px; /* Ensure equal padding */
            border-radius: 8px;
            font-size: 16px;
            font-weight: 500;
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3);
            z-index: 1000;
            opacity: 1;
            display: flex; /* Ensures items (text + button) align properly */
            align-items: center; /* Vertically centers text and button */
            justify-content: space-between; /* Pushes text left, button right */
            transition: opacity 0.5s ease-out, transform 0.3s ease-in-out;
            transform: translateY(0);
            min-width: 250px; /* Ensures width consistency */
            max-width: 400px;
        }

            .alert-message p {
                margin: 0; /* Removes extra spacing */
                flex-grow: 1; /* Allows text to take available space */
            }

            .alert-message.fade-out {
                opacity: 0;
                transform: translateY(-20px);
            }

        .error {
            background-color: #d32f2f; /* Red for error */
        }

        .success {
            background-color: #4CAF50; /* Green for success */
        }

        .close-btn {
            background: transparent;
            border: none;
            color: #fff;
            font-size: 20px;
            cursor: pointer;
            margin-left: 10px;
            padding: 0 5px; /* Ensures button size consistency */
        }

    </style>
    <script>
            function closeAlertMessage() {
            const alertMessage = document.getElementById('alertMessage');
            if (alertMessage) {
                alertMessage.classList.add('fade-out');
                setTimeout(() => alertMessage.style.display = 'none', 500); // Wait for fade-out to complete
            }
        }
        setTimeout(closeAlertMessage, 2500);
    </script>

    <script>
        function showSpinner() {
            let overlay = document.getElementById("spinner-overlay");
            overlay.style.display = "flex"; // Show the overlay

            // Do NOT hide the spinner automatically; let it disappear when the request completes
        }

        // Optional: Hide overlay manually (if needed)
        function hideSpinner() {
            let overlay = document.getElementById("spinner-overlay");
            overlay.style.display = "none";
        }
    </script>


</body>
</html>
